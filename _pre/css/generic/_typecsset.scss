/**
 * Typecsset
 *
 * Typecsset is a small, unopinionated library for creating beautifully set type
 * on the web. Typecsset gives perfect vertical rhythm at any configurable font
 * size, as well as many other typographical niceties.
 */





//------------------------------------\\
    // SETTINGS
//------------------------------------\\
// Typecsset needs some variables setting before it can get started. Some of
// these variables can be overriden by developers, others need to remain
// untouched because Typecsset will assign them automatically based on what
// you’ve told it.

// What would you like your base font-size to be? Define in pixels; the library
// will convert measurements to the most appropriate units (rems or unitless).
$typecsset-base-font-size:      16px !default;
$typecsset-base-line-height:    24px !default;

// Heading sizes
$typecsset-h1-size:             48px !default;
$typecsset-h2-size:             36px !default;
$typecsset-h3-size:             30px !default;
$typecsset-h4-size:             24px !default;
$typecsset-h5-size:             20px !default;
$typecsset-h6-size:             18px !default;

// Would you like indented (rather than spaced) paragraph delimiting?
$typecsset-indented-paragraphs: false !default;

// Would you like to show a baseline grid? This is handy during development.
$typecsset-show-baseline:       false !default;

// Do not modify these variables; they are internal settings upon which the
// library depends.
$typecsset-magic-number:        $typecsset-base-line-height;
$typecsset-magic-ratio:         $typecsset-base-line-height / $typecsset-base-font-size;





//------------------------------------\\
    // TOOLS
//------------------------------------\\
// Typecsset has a number of its own tools which it uses to generate its CSS
// more efficiently.

// Quickly generate a font-size in rems, with a pixel fallback, based on the
// value we pass into the mixin, e.g.:
//
// h1 {
//     @include typecsset-font-size(24px);
// }
//
@mixin typecsset-font-size($font-size, $line-height: true) {
    font-size: $font-size;
    font-size: ($font-size / $typecsset-base-font-size) * 1rem;

    @if $line-height == true {
        line-height: ceil($font-size / $typecsset-base-line-height) * ($typecsset-base-line-height / $font-size);
    }

}

// Space elements by an amount based on your magic number. Pass in the property
// to be indented as a paramater, e.g.:
//
// pre {
//     @include typecsset-space(padding-left);
// }
//
@mixin typecsset-space($property, $multiplier: 2) {
    #{$property}: $multiplier * $typecsset-magic-number;
    #{$property}: $multiplier * $typecsset-magic-ratio + rem;
}

// A small, internally-used function to remove the units from a given value.
@function typecsset-strip-units($number) {
    @return $number / ($number * 0 + 1);
}

@function typecsset-incr($font-size, $x: 4, $y: 5) {
    @return (($typecsset-base-line-height / $font-size) * ($x / $y)) * 0 + 1
}


/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * A lot of elements in Typecsset need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
%typecsset-reset {
    margin:  0;
    padding: 0;
}

%typecsset-vertical-rhythm {
    @extend %typecsset-reset;
    margin-bottom: $typecsset-magic-number;
    margin-bottom: $typecsset-magic-ratio + rem;
}





/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * 1. Set the base element’s `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), and your project’s
 *    base font size.
 * 3. If you have chosen to display a baseline grid, we turn it on here.
 */

html {
    font-size: $typecsset-base-font-size / 16px + em; /* [1] */
    line-height: $typecsset-base-line-height / $typecsset-base-font-size; /* [2] */

    @if $typecsset-show-baseline == true {
        $typecsset-baseline-size: typecsset-strip-units($typecsset-magic-number);

        background-image: url(http://basehold.it/i/#{$typecsset-baseline-size}); /* [3] */
    }
}
